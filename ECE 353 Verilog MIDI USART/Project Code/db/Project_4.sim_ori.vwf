/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 20000000.0;
	SIMULATION_TIME = 20000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("LED[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LED[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LED[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LED[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LED[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LED[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LED[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LED[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MIDI")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clkin")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("dataOut[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dataOut[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dataOut[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dataOut[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dataOut[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dataOut[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dataOut[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dataOut[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

GROUP("LED")
{
	MEMBERS = "LED[0]", "LED[1]", "LED[2]", "LED[3]", "LED[4]", "LED[5]", "LED[6]", "LED[7]";
}

GROUP("dataOut")
{
	MEMBERS = "dataOut[0]", "dataOut[1]", "dataOut[2]", "dataOut[3]", "dataOut[4]", "dataOut[5]", "dataOut[6]", "dataOut[7]";
}

TRANSITION_LIST("LED[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5583875.0;
		LEVEL 1 FOR 14416125.0;
	}
}

TRANSITION_LIST("LED[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000000.0;
	}
}

TRANSITION_LIST("LED[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000000.0;
	}
}

TRANSITION_LIST("LED[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5583875.0;
		LEVEL 1 FOR 14416125.0;
	}
}

TRANSITION_LIST("LED[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000000.0;
	}
}

TRANSITION_LIST("LED[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5583875.0;
		LEVEL 1 FOR 14416125.0;
	}
}

TRANSITION_LIST("LED[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5583875.0;
		LEVEL 1 FOR 14416125.0;
	}
}

TRANSITION_LIST("LED[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5583875.0;
		LEVEL 1 FOR 14416125.0;
	}
}

TRANSITION_LIST("MIDI")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4234240.0;
		LEVEL 0 FOR 25600.0;
		LEVEL 1 FOR 35840.0;
		LEVEL 0 FOR 61440.0;
		LEVEL 1 FOR 35840.0;
		LEVEL 0 FOR 128000.0;
		LEVEL 1 FOR 701440.0;
		LEVEL 0 FOR 15360.0;
		LEVEL 1 FOR 30720.0;
		LEVEL 0 FOR 66560.0;
		LEVEL 1 FOR 30720.0;
		LEVEL 0 FOR 40960.0;
		LEVEL 1 FOR 81920.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 15360.0;
		LEVEL 1 FOR 1080320.0;
		LEVEL 0 FOR 15360.0;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 128000.0;
		LEVEL 1 FOR 2554880.0;
		LEVEL 0 FOR 245760.0;
		LEVEL 1 FOR 81920.0;
		LEVEL 0 FOR 81920.0;
		LEVEL 1 FOR 2949120.0;
		LEVEL 0 FOR 163840.0;
		LEVEL 1 FOR 327680.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 245760.0;
		}
		LEVEL 1 FOR 6483200.0;
	}
}

TRANSITION_LIST("clkin")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 125.0;
		NODE
		{
			REPEAT = 79999;
			LEVEL 0 FOR 125.0;
			LEVEL 1 FOR 125.0;
		}
	}
}

TRANSITION_LIST("dataOut[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4575875.0;
		LEVEL 1 FOR 15424125.0;
	}
}

TRANSITION_LIST("dataOut[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6943875.0;
		LEVEL 1 FOR 13056125.0;
	}
}

TRANSITION_LIST("dataOut[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 255875.0;
		LEVEL 1 FOR 4320000.0;
		LEVEL 0 FOR 2368000.0;
		LEVEL 1 FOR 13056125.0;
	}
}

TRANSITION_LIST("dataOut[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 255875.0;
		LEVEL 1 FOR 19744125.0;
	}
}

TRANSITION_LIST("dataOut[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 255875.0;
		LEVEL 1 FOR 4320000.0;
		LEVEL 0 FOR 15424125.0;
	}
}

TRANSITION_LIST("dataOut[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 255875.0;
		LEVEL 1 FOR 4320000.0;
		LEVEL 0 FOR 992000.0;
		LEVEL 1 FOR 1376000.0;
		LEVEL 0 FOR 13056125.0;
	}
}

TRANSITION_LIST("dataOut[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 255875.0;
		LEVEL 1 FOR 4320000.0;
		LEVEL 0 FOR 992000.0;
		LEVEL 1 FOR 1376000.0;
		LEVEL 0 FOR 13056125.0;
	}
}

TRANSITION_LIST("dataOut[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 255875.0;
		LEVEL 1 FOR 4320000.0;
		LEVEL 0 FOR 992000.0;
		LEVEL 1 FOR 1376000.0;
		LEVEL 0 FOR 13056125.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15875.0;
		NODE
		{
			REPEAT = 624;
			LEVEL 1 FOR 16000.0;
			LEVEL 0 FOR 16000.0;
		}
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 125.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "MIDI";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clkin";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "LED[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "LED[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "LED[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "LED[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "LED[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "LED[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "LED[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "LED[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dataOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16, 17, 18, 19, 20;
}

DISPLAY_LINE
{
	CHANNEL = "dataOut[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "dataOut[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "dataOut[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "dataOut[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "dataOut[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "dataOut[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "dataOut[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "dataOut[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 12;
}

TIME_BAR
{
	TIME = 28625;
	MASTER = TRUE;
}
;
